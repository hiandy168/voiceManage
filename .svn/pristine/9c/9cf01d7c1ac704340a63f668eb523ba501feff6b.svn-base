<?php

namespace Admin\Controller;

use Think\Controller;

/**
 * StatisticsController.class.php
 * @author timelesszhuang
 * @version salesmen 1.0
 * @copyright 赵兴壮
 * @package  Controller
 * @todo 数据统计
 * 2014年8月12 12:25
 */
class StatisticsController extends BaseController {

    /**
     * 按天统计
     */
    public function dayCount() {
        $data = $this->getuserdata('1');
        $data = $this->formatTable($data);
        $this->assign('data', $data);
        $this->display();
    }

    /**
     * 获取用户信息
     */
    private function getuserdata($type) {
        if (session('BOSS')) {
            $m = M('Department');
            $departmentdata = $m->where($condition)->getField('id,name');
            $data = array();
            foreach ($departmentdata as $key => $value) {
                #每一个部门下面的用户
                $perdepartdata = array();
                $userdata = $this->getdata_bydepartmentid($key);
                if (!empty($userdata)) {
                    #部门下面的每一个职员的数据
                    foreach ($userdata as $k => $v) {
                        $peruserdata = array();
                        #用户名称
                        $peruserdata[] = $v;
                        if ($type == '1') {
                            $countarr = $this->getDayInAndOutPhoneCount($k);
                            $sizegt50 = $this->getDayOver50Count($k);
                            $sizegt30 = $this->getDayOver30Count($k);
                        } else if ($type == '2') {
                            $countarr = $this->getWeekInAndOutPhoneCount($k);
                            $sizegt50 = $this->getWeekOver50Count($k);
                            $sizegt30 = $this->getWeekOver30Count($k);
                        } else {
                            $countarr = $this->getMonthInAndOutPhoneCount($k);
                            $sizegt50 = $this->getMonthOver50Count($k);
                            $sizegt30 = $this->getMonthOver30Count($k);
                        }
                        #0  打出   1打入
                        $peruserdata[] = $countarr[0];
                        $peruserdata[] = $countarr[1];
                        #0  打出   1打入
                        $peruserdata[] = $sizegt50[0];
                        $peruserdata[] = $sizegt50[1];
                        #0  打出   1打入
                        $peruserdata[] = $sizegt30[0];
                        $peruserdata[] = $sizegt30[1];
                        #获取用户的 统计数据 比如用户打入电话 用户打出电话 电话 50秒的数量 
                        $perdepartdata[$k] = $peruserdata;
                        $peruserdata = array();
                    }
                }
                $arr[$key] = $perdepartdata;
                $arr['dep_name'] = $value;
                $perdepartdata = array();
                $data[] = $arr;
                $arr = array();
            }
            #其他部门信息
            $department_id = 0;
            $otheruserdata = $this->getdata_bydepartmentid($department_id);
            if (!empty($otheruserdata)) {
                foreach ($otheruserdata as $k => $value) {
                    $peruserdata = array();
                    #用户名称
                    $peruserdata[] = $value;
                    if ($type == '1') {
                        $countarr = $this->getDayInAndOutPhoneCount($k);
                        $sizegt50 = $this->getDayOver50Count($k);
                        $sizegt30 = $this->getDayOver30Count($k);
                    } else if ($type == '2') {
                        $countarr = $this->getWeekInAndOutPhoneCount($k);
                        $sizegt50 = $this->getWeekOver50Count($k);
                        $sizegt30 = $this->getWeekOver30Count($k);
                    } else {
                        $countarr = $this->getMonthInAndOutPhoneCount($k);
                        $sizegt50 = $this->getMonthOver50Count($k);
                        $sizegt30 = $this->getMonthOver30Count($k);
                    }
                    #0  打出   1打入
                    $peruserdata[] = $countarr[0];
                    $peruserdata[] = $countarr[1];
                    #0  打出   1打入
                    $peruserdata[] = $sizegt50[0];
                    $peruserdata[] = $sizegt50[1];
                    #0  打出   1打入
                    $peruserdata[] = $sizegt30[0];
                    $peruserdata[] = $sizegt30[1];
                    #获取用户的 统计数据 比如用户打入电话 用户打出电话 电话 50秒的数量 
                    $perdepartdata[$k] = $peruserdata;
                    $peruserdata = array();
                }
                $arr[0] = $perdepartdata;
                $arr['dep_name'] = "其他部门";
                $perdepartdata = array();
                $data[] = $arr;
                $arr = array();
            }
        } else if (session('DEPARTMENT_ID')) {
            $department_id = session('DEPARTMENT_ID');
            $userdata = $this->getdata_bydepartmentid($department_id);
            $data = array();
            $perdepartdata = array();
            //要判断是不是该分组为空值
            if (!empty($userdata)) {
                foreach ($userdata as $k => $v) {
                    #用户名称
                    $peruserdata[] = $v;
                    if ($type == '1') {
                        $countarr = $this->getDayInAndOutPhoneCount($k);
                        $sizegt50 = $this->getDayOver50Count($k);
                        $sizegt30 = $this->getDayOver30Count($k);
                    } else if ($type == '2') {
                        $countarr = $this->getWeekInAndOutPhoneCount($k);
                        $sizegt50 = $this->getWeekOver50Count($k);
                        $sizegt30 = $this->getWeekOver30Count($k);
                    } else {
                        $countarr = $this->getMonthInAndOutPhoneCount($k);
                        $sizegt50 = $this->getMonthOver50Count($k);
                        $sizegt30 = $this->getMonthOver30Count($k);
                    }
                    #0  打出   1打入
                    $peruserdata[] = $countarr[0];
                    $peruserdata[] = $countarr[1];
                    #0  打出   1打入
                    $peruserdata[] = $sizegt50[0];
                    $peruserdata[] = $sizegt50[1];
                    #0  打出   1打入
                    $peruserdata[] = $sizegt30[0];
                    $peruserdata[] = $sizegt30[1];
                    $perdepartdata[$k] = $peruserdata;
                    $peruserdata = array();
                }
            }
            $arr[0] = $perdepartdata;
            $arr['dep_name'] = '职员';
            $perdepartdata = array();
            $data[] = $arr;
            $arr = array();
        }
        return $data;
    }

    /**
     * 格式化字符串数据   按周按日查询  按天查询实现 
     */
    private function formatTable($data) {
        $string = '';
        foreach ($data as $key => $value) {
            #部门下的数据
            $arr = array_values($value);
            $depart_name = $arr[1];
            $perarr = $arr[0];
            $string .= "<table class='gridtable' style='margin:0 auto;'>"
                    . "<tr><td colspan='7'>部门：$depart_name</td></tr>"
                    . "<tr><th rowspan='2'>姓名</th><th colspan='3'>打出电话</th><th colspan='3'>打入电话</th></tr>"
                    . "<tr><th>总数</th><th>30秒以上</th><th>50秒以上</th><th>总数</th><th>30秒以上</th><th>50秒以上</th></tr>";
            foreach ($perarr as $k => $v) {
                $string.="<tr><td>$v[0]</td><td>$v[1]</td><td>$v[5]</td><td>$v[3]</td><td>$v[2]</td><td>$v[6]</td><td>$v[4]</td></tr>";
            }
            $string.= "</table><br><br>";
        }
        return $string;
    }

    /**
     * getdeuserdata
     * 根据departmentid获取部门下的人
     */
    private function getdata_bydepartmentid($department_id) {
        $m = M('UserInfo');
        $condition['department_id'] = array('eq', $department_id);
        $userdata = $m->where($condition)->getField('user_id,name');
        return $userdata;
    }

    /**
     * 根据 user_id获取每一天的打入打出数据统 
     */
    private function getDayInAndOutPhoneCount($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $starttime = strtotime(date('Y-m-d 00:00:00', time()));
        $stoptime = strtotime(date('Y-m-d 23:59:59', time()));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10'";
        $incondition = $condition . " and type = '20'";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    /**
     * 获取时间超过
     */
    private function getDayOver50Count($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $starttime = strtotime(date('Y-m-d 00:00:00', time()));
        $stoptime = strtotime(date('Y-m-d 23:59:59', time()));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10' and size > 50";
        $incondition = $condition . " and type = '20' and size > 50";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    /**
     * 获取时间超过
     */
    private function getDayOver30Count($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $starttime = strtotime(date('Y-m-d 00:00:00', time()));
        $stoptime = strtotime(date('Y-m-d 23:59:59', time()));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10' and size > 30";
        $incondition = $condition . " and type = '20' and size > 30";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    ###############################################################按周统计##############################################################
    /**
     * 按周统计
     */

    public function weekCount() {
        #周一的时间戳 
        #echo mktime(0, 0, 0, date("m"), date("d") - date("w") + 1, date("Y"));
        #周末的时间戳 
        #echo mktime(23, 59, 59, date("m"), date("d") - date("w") + 7, date("Y"));
        $data = $this->getuserdata('2');
        $data = $this->formatTable($data);
        $this->assign('data', $data);
        $this->display();
    }

    /**
     * 根据 user_id获取每一天的打入打出数据统 
     */
    private function getWeekInAndOutPhoneCount($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $starttime = mktime(0, 0, 0, date("m"), date("d") - date("w") + 1, date("Y"));
        $stoptime = mktime(23, 59, 59, date("m"), date("d") - date("w") + 7, date("Y"));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10'";
        $incondition = $condition . " and type = '20'";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    /**
     * 获取时间超过
     */
    private function getWeekOver50Count($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $starttime = mktime(0, 0, 0, date("m"), date("d") - date("w") + 1, date("Y"));
        $stoptime = mktime(23, 59, 59, date("m"), date("d") - date("w") + 7, date("Y"));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10' and size > 50";
        $incondition = $condition . " and type = '20' and size > 50";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    /**
     * 获取时间超过
     */
    private function getWeekOver30Count($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $starttime = mktime(0, 0, 0, date("m"), date("d") - date("w") + 1, date("Y"));
        $stoptime = mktime(23, 59, 59, date("m"), date("d") - date("w") + 7, date("Y"));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10' and size > 30";
        $incondition = $condition . " and type = '20' and size > 30";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    ###############################################################按月统计##############################################################
    /**
     * 按月统计
     */

    public function monthCount() {
        #周一的时间戳 
        #echo mktime(0, 0, 0, date("m"), date("d") - date("w") + 1, date("Y"));
        #周末的时间戳 
        #echo mktime(23, 59, 59, date("m"), date("d") - date("w") + 7, date("Y"));
        $data = $this->getuserdata('3');
        $data = $this->formatTable($data);
        $this->assign('data', $data);
        $this->display();
    }

    /**
     * 根据 user_id获取的打入打出数据统 
     */
    private function getMonthInAndOutPhoneCount($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        #echo mktime(0, 0 , 0,date("m"),1,date("Y")); 
        #echo mktime(23,59,59,date("m"),date("t"),date("Y")); 

        $starttime = mktime(0, 0, 0, date("m"), 1, date("Y"));
        $stoptime = mktime(23, 59, 59, date("m"), date("d") - date("w") + 7, date("Y"));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10'";
        $incondition = $condition . " and type = '20'";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    /**
     * 获取时间超过
     */
    private function getMonthOver50Count($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $starttime = mktime(0, 0, 0, date("m"), 1, date("Y"));
        $stoptime = mktime(23, 59, 59, date("m"), date("t"), date("Y"));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10' and size > 50";
        $incondition = $condition . " and type = '20' and size > 50";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    /**
     * 获取时间超过
     */
    private function getMonthOver30Count($id) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $starttime = mktime(0, 0, 0, date("m"), 1, date("Y"));
        $stoptime = mktime(23, 59, 59, date("m"), date("t"), date("Y"));
        $condition = "user_id = $id and time > $starttime and time < $stoptime";
        $outcondition = $condition . " and type = '10' and size > 30";
        $incondition = $condition . " and type = '20' and size > 30";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    #############################################################条件查询####################################################################

    /**
     * 条件查询实现
     */
    public function conditionCount() {
        $this->display();
    }

    /**
     * combox  格式化实现修改 
     */
    public function jsonTree() {
        if (session('BOSS')) {
            $m = M('Department');
            $departmentdata = $m->where($condition)->getField('id,name');
            $data = array();
            $alldata[] = array('id' => "count", 'text' => '按电话量从高到低排序');
            $alldata[] = array('id' => "percent", 'text' => '按百分比从高到低排序');
            $data[] = array('id' => "all", 'text' => '全部职员数据', 'state' => 'open', 'children' => $alldata);
            foreach ($departmentdata as $key => $value) {
                $userdata = $this->getdata_bydepartmentid($key);
                if (!empty($userdata)) {
                    foreach ($userdata as $k => $v) {
                        $id = $k;
                        $text = $v;
                        $Data[] = array('id' => $id, 'text' => $text);
                    }
                } else {
                    $Data[] = array('id' => 0, 'text' => '暂无下级职员!');
                }
                $data[] = array('id' => "de_id$key", 'text' => $value, 'state' => 'open', 'children' => $Data);
                #Data数据清空
                $Data = array();
            }
            #其他部门信息
            $department_id = 0;
            $otheruserdata = $this->getdata_bydepartmentid($department_id);
            if (!empty($otheruserdata)) {
                foreach ($otheruserdata as $k => $value) {
                    $id = $k;
                    $text = $value;
                    $Data[] = array('id' => $id, 'text' => $text);
                }
            } else {
                $Data[] = array('id' => 0, 'text' => '暂无下级职员!');
            }
            #其他用户
            $data[] = array('id' => "de_id0", 'text' => '其他部门', 'state' => 'open', 'children' => $Data);
            exit(json_encode($data));
        } else if (session('DEPARTMENT_ID')) {
            //产品分类获取  分配到前台
            $department_id = session('DEPARTMENT_ID');
            $userdata = $this->getdata_bydepartmentid($department_id);
            //要判断是不是该分组为空值
            if (!empty($userdata)) {
                foreach ($userdata as $k => $value) {
                    $id = $k;
                    $text = $value;
                    $Data[] = array('id' => $id, 'text' => $text);
                }
            } else {
                $Data[] = array('id' => 0, 'text' => '暂无下级职员!');
            }
            $data = array(array('id' => "de_id$department_id", 'text' => '所在部门', 'state' => 'open', 'children' => $Data));
            exit(json_encode($data));
        }
    }

    /**
     * @author zhaoxingzhuang 834916321@qq.com
     * @access public
     */
    public function condition() {
        $id = I('post.id');
        $starttime = I('post.starttime');
        $starttime = $starttime . " 00:00:00";
        $stoptime = I('post.stoptime');
        $stoptime = $stoptime . " 00:00:00";
        #转换为时间戳
        $starttimestamp = strtotime($starttime);
        $stoptimestamp = strtotime($stoptime);
        #要查询的时间以上的数据
        $time = I('post.time');
        $condition = "time > $starttimestamp and time < $stoptimestamp and size > $time";
        $allcondition = "time > $starttimestamp and time < $stoptimestamp";
        #判断是部门的数据还是个人的数据
        $reg = '/^(de_id)d?/';
        if (preg_match($reg, $id)) {
            #部门的数据
            $dep_id = substr($id, 5);
            $data = $this->getDepData($dep_id, $condition, $allcondition);
            $returnData = $this->formatQueryData($data);
            $Data['data'] = $returnData;
            $Data['status'] = 'suc';
            exit(json_encode($Data));
        } else if ($id == 'all') {
            #全部职员的数据
            $data = $this->getAllConditionData($condition, $allcondition);
            $returnData = $this->formatAllConditionTable($data);
            $Data['data'] = $returnData;
            $Data['status'] = 'suc';
            exit(json_encode($Data));
        } else if ($id == 'count') {
            #全部职员的数据
            $data = $this->getAllConditionData($condition, $allcondition);
            $data = $this->dealArr($data);
            #写个排序实现
            $returnData = $this->sortByCount($data);
            $Data['data'] = $returnData;
            $Data['status'] = 'suc';
            exit(json_encode($Data));
        } else if ($id == 'percent') {
            #全部职员的数据
            $data = $this->getAllConditionData($condition, $allcondition);
            $data = $this->dealArr($data);
            #写个排序实现
            $returnData = $this->sortByPercent($data);
            $Data['data'] = $returnData;
            $Data['status'] = 'suc';
            exit(json_encode($Data));
        } else {
            #个人的数据
            $user_id = $id;
            $data = $this->getPerUserData($user_id, $condition, $allcondition);
            $returnData = $this->formatPerQueryData($data);
            $Data['data'] = $returnData;
            $Data['status'] = 'suc';
            exit(json_encode($Data));
        }
    }

    /**
     * 获取部门dep_id下的 职员的数据
     */
    private function getDepData($id, $condition, $allcondition) {
        //产品分类获取  分配到前台
        $department_id = $id;
        $userdata = $this->getdata_bydepartmentid($department_id);
        $data = array();
        $perdepartdata = array();
        //要判断是不是该分组为空值
        if (!empty($userdata)) {
            #用户id=>值
            foreach ($userdata as $k => $v) {
                #用户名称
                $peruserdata[] = $v;
                $countarr = $this->getCount($k, $allcondition);
                #0  打出   1打入
                $peruserdata[] = $countarr[0];
                $peruserdata[] = $countarr[1];
                $conditioncountarr = $this->getConditionCount($k, $condition);
                if ($countarr[0]) {
                    //$hh/$totalpj)*100
                    $peruserdata[] = round($conditioncountarr[0] / $countarr[0] * 100) . "%";
                } else {
                    $peruserdata[] = "0%";
                }
                if ($countarr[1]) {
                    $peruserdata[] = round($conditioncountarr[1] / $countarr[1] * 100) . "%";
                } else {
                    $peruserdata[] = "0%";
                }
                #0  打出   1打入
                $peruserdata[] = $conditioncountarr[0];
                $peruserdata[] = $conditioncountarr[1];
                $perdepartdata[$k] = $peruserdata;
                $peruserdata = array();
            }
        }
        $arr[0] = $perdepartdata;
        $arr['dep_name'] = '职员';
        $perdepartdata = array();
        $data[] = $arr;
        $arr = array();
        return $data;
    }

    /**
     * 获取个人的数据实现
     */
    private function getPerUserData($id, $condition, $allcondition) {
        $countarr = $this->getCount($id, $allcondition);
        #0  打出   1打入
        $peruserdata[] = $countarr[0]; //打出 
        $peruserdata[] = $countarr[1];
        $conditioncountarr = $this->getConditionCount($id, $condition);
        if ($countarr[0]) {
            //$hh/$totalpj)*100
            $peruserdata[] = round($conditioncountarr[0] / $countarr[0] * 100) . "%";
        } else {
            $peruserdata[] = "0%";
        } if ($countarr[1]) {
            $peruserdata[] = round($conditioncountarr[1] / $countarr[1] * 100) . "%";
        } else {
            $peruserdata[] = "0%";
        }
        #0  打出   1打入
        $peruserdata[] = $conditioncountarr[0];
        $peruserdata[] = $conditioncountarr[1];

        return $peruserdata;
    }

    /**
     * 获取 指定情况下的用户数据
     */
    private function getConditionCount($k, $condition) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $condition = $condition . " and user_id = $k ";
        $outcondition = $condition . " and type = '10'";
        $incondition = $condition . " and type = '20'";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    /**
     * 根据时间查询个人的总数据
     */
    private function getCount($k, $condition) {
        #显示的是今日的统计数据   需要先更新一下今日的数据
        $m = M('UserVoice');
        $condition = $condition . " and user_id = $k ";
        $outcondition = $condition . " and type = '10'";
        $incondition = $condition . " and type = '20'";
        $out = $m->where($outcondition)->count();
        $in = $m->where($incondition)->count();
        #打入的   打出的电话数量
        return array(0 => $out, 1 => $in);
    }

    /**
     * 格式化部门数据查询数据实现
     */
    private function formatQueryData($data) {
        $string = '';
        foreach ($data as $key => $value) {
            #部门下的数据
            $arr = array_values($value);
            $depart_name = $arr[1];
            $perarr = $arr[0];
            $string .= "<table class='gridtable' style='margin:0 auto;'>"
                    . "<tr><th rowspan='2'>姓名</th><th colspan='3'>打出电话</th><th colspan='3'>打入电话</th></tr>"
                    . "<tr><th>总数</th><th>符合查询条件数量</th><th>百分比</th><th>总数</th><th>符合查询条件数量</th><th>百分比</th></tr>";
            foreach ($perarr as $k => $v) {
                $string.="<tr><td>$v[0]</td><td>$v[1]</td><td>$v[5]</td><td>$v[3]</td><td>$v[2]</td><td>$v[6]</td><td>$v[4]</td></tr>";
            }
            $string.= "</table><br><br>";
        }
        return $string;
    }

    /**
     * 格式化个人数据查询数据实现
     */
    private function formatPerQueryData($data) {
        $string = '';
        #部门下的数据
        $string .= "<table class='gridtable' style='margin:0 auto;'>"
                . "<tr><th colspan='3'>打出电话</th><th colspan='3'>打入电话</th></tr>"
                . "<tr><th>总数</th><th>符合查询条件数量</th><th>百分比</th><th>总数</th><th>符合查询条件数量</th><th>百分比</th></tr>";
        $string.="<tr><td>$data[0]</td><td>$data[4]</td><td>$data[2]</td><td>$data[1]</td><td>$data[5]</td><td>$data[3]</td></tr>";
        $string.= "</table><br><br>";
        return $string;
    }

    /**
     * 查询全部职员的数据
     */
    private function getAllConditionData($condition, $allcondition) {
        $m = M('Department');
        $departmentdata = $m->getField('id,name');
        $data = array();
        foreach ($departmentdata as $key => $value) {
            #每一个部门下面的用户
            $perdepartdata = array();
            $userdata = $this->getdata_bydepartmentid($key);
            if (!empty($userdata)) {
                #部门下面的每一个职员的数据
                foreach ($userdata as $k => $v) {
                    $peruserdata = array();
                    $perUserData = $this->getPerUserData($k, $condition, $allcondition);
                    #0  打出   1打入
                    $peruserdata = $perUserData;
                    #用户名称
                    $peruserdata[] = $v;
                    #获取用户的 统计数据 比如用户打入电话 用户打出电话 电话 50秒的数量 
                    $perdepartdata[$k] = $peruserdata;
                    $peruserdata = array();
                }
            }
            $arr[$key] = $perdepartdata;
            $arr['dep_name'] = $value;
            $perdepartdata = array();
            $data[] = $arr;
            $arr = array();
        }
        #其他部门信息
        $department_id = 0;
        $otheruserdata = $this->getdata_bydepartmentid($department_id);
        if (!empty($otheruserdata)) {
            foreach ($otheruserdata as $k => $value) {
                $perUserData = $this->getPerUserData($k, $condition, $allcondition);
                #0  打出   1打入
                $peruserdata = $perUserData;
                #用户名称
                $peruserdata[] = $value;
                #获取用户的 统计数据 比如用户打入电话 用户打出电话 电话 50秒的数量 
                $perdepartdata[$k] = $peruserdata;
                $peruserdata = array();
            }
            $arr[0] = $perdepartdata;
            $arr['dep_name'] = "其他部门";
            $perdepartdata = array();
            $data[] = $arr;
            $arr = array();
        }
        return $data;
    }

    /**
     * 格式化全部查询的数据实现
     */
    private function formatAllConditionTable($data) {
        $string = '';
        foreach ($data as $key => $value) {
            #部门下的数据
            $arr = array_values($value);
            $depart_name = $arr[1];
            $perarr = $arr[0];
            $string .= "<table class='gridtable' style='margin:0 auto;'>"
                    . "<tr><td colspan='7'>部门：$depart_name</td></tr>"
                    . "<tr><th rowspan='2'>姓名</th><th colspan='3'>打出电话</th><th colspan='3'>打入电话</th></tr>"
                    . "<tr><th>总数</th><th>符合查询条件数量</th><th>百分比</th><th>总数</th><th>符合查询条件数量</th><th>百分比</th></tr>";
            foreach ($perarr as $k => $v) {
                $string.="<tr><td>$v[6]</td><td>$v[0]</td><td>$v[4]</td><td>$v[2]</td><td>$v[1]</td><td>$v[5]</td><td>$v[3]</td></tr>";
            }
            $string.= "</table><br><br>";
        }
        return $string;
    }

    #########################################数组排序实现###########################

    private function dealArr($data) {
        $finalArr = array();
        foreach ($data as $key => $value) {
            #部门下的数据
            $arr = array_values($value);
            $depart_name = $arr[1];
            $perarr = $arr[0];
            foreach ($perarr as $k => $v) {
                $finalArr[$k] = $v;
                $finalArr[$k][] = $depart_name;
            }
        }
        //处理数据实现
        return $finalArr;
    }

    /**
     * 按照百分比实现排序
     */
    private function sortByPercent($data) {
        $data = $this->sortByData($data, 2);
        $string = $this->formatCountAndPercentTable($data);
        return $string;
    }

    /**
     * 按照数量排序
     */
    private function sortByCount($data) {
        $data = $this->sortByData($data, 0);
        $string = $this->formatCountAndPercentTable($data);
        return $string;
    }

    /**
     * 根据字段排序
     */
    private function sortByData($array, $field) {
        $sort = $field;
        foreach ($array as $k => $v) {
            if ($sort == "2") {
                if (strlen($v[2]) == 3) {
                    $newArr[$k] = substr($v[2], 0, 2);
                } else {
                    $newArr[$k] = substr($v[2], 0, 3);
                }
            } else {
                $newArr[$k] = $v[$sort];
            }
        }
        //这个函数如果执行正确他会直接改变原数组键值的顺序 
        //如果执行失败，那么他会返回 bool(false)
        array_multisort($newArr, SORT_DESC, $array);
        return $array;
        exit;
    }

    /**
     * 格式化字段
     */
    private function formatCountAndPercentTable($data) {
        $string = '';
        #部门下的数据
        $string .= "<table class='gridtable' style='margin:0 auto;'>"
                . "<tr><th rowspan='2'>姓名</th><th rowspan='2'>部门</th><th colspan='3'>打出电话</th><th colspan='3'>打入电话</th></tr>"
                . "<tr><th>总数</th><th>符合查询条件数量</th><th>百分比</th><th>总数</th><th>符合查询条件数量</th><th>百分比</th></tr>";
        foreach ($data as $k => $v) {
            $string.="<tr><td>$v[6]</td><td>$v[7]</td><td>$v[0]</td><td>$v[4]</td><td>$v[2]</td><td>$v[1]</td><td>$v[5]</td><td>$v[3]</td></tr>";
        }
        $string.= "</table><br><br>";
        return $string;
    }

}
