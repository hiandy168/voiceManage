<?php

/**
 * FiletraverseController.class.php 
 * 文件遍历操作列表实现
 * @author timelesszhuang
 * @version salesmen 1.0
 * @copyright 赵兴壮
 * @package  Controller
 * @todo 数据添加到数据库
 * 2014年10月20 16:47
 */

namespace Admin\Controller;

use vendor;
use Think\Controller;

class FiletraverseController extends BaseController {

    /**
     * 获取今天的数据
     */
    public function getTodayData() {
        ini_set("max_execution_time", 7200); // s 60 分钟 
        $path = C('FILE_PATH');
        $data = array();
        $this->traverse($path, $data);
        print_r($data);
        exit;
        $returndata[] = $this->formatData($data);
        $checkResult = R('Admin/Datamanage/addvoicedata', $returndata);
        print_r($checkResult);
    }

    /**
     * 遍历今日数据
     */
    public function traverse($path, &$data) {
        $current_dir = opendir($path);    //opendir()返回一个目录句柄,失败返回false
        while (($file = readdir($current_dir)) !== false) {    //readdir()返回打开目录句柄中的一个条目
            $sub_dir = $path . DIRECTORY_SEPARATOR . $file;    //构建子目录路径
            if ($file == '.' || $file == '..') {
                continue;
            } else if (is_dir($sub_dir)) {    //如果是目录,进行递归
                $this->traverse($sub_dir, $data);
            } else {    //如果是文件,直接输出
                #因为 path不支持绝对路径  所以改为绝对路径
                #把 path改成 192.168.1.150 下的路径就可
                $path=$this->subpath($path);
                $data[] = $path . '/' . $file;
            }
        }
    }

    /**
     * 截取路径 为 192.168.1.150/pbxrecord
     */
    private function subpath($path) {
        $path=  substr($path,9);
        return $path;
    }

    /**
     * 格式化字符串
     */
    private function formatData($data) {
        #数据格式化
        $returndata[] = $this->formInsertData($data);
        return $returndata;
    }

    /**
     * 截取字符串
     */
    private function formInsertData($data) {
        #数组分机号=>用户id
        $userInfo = $this->getuserinfo();
        $voicedata = array();
        foreach ($data as $k => $v) {
            $path_parts = pathinfo($v);
            $filename = $path_parts["basename"];
            $string = explode('_', $filename);
            if (strlen($string[0]) > strlen($string[1])) {
                $extension = $string[1];
                $voicedata[$k][1] = $string[0];
                $voicedata[$k][2] = $this->formatTimeString($string[2]);
                #20表示是打进来的电话
                $voicedata[$k][3] = '20';
            } else {
                $extension = $string[0];
                $voicedata[$k][1] = $string[1];
                $voicedata[$k][2] = $this->formatTimeString($string[2]);
                #表示打出的电话
                $voicedata[$k][3] = '10';
            }
            $voicedata[$k][4] = $v;
            $voicedata[$k][0] = empty($userInfo[$extension]) ? 0 : $userInfo[$extension];
            $voicedata[$k][5] = $this->mp3_len($v);
        }
        return $voicedata;
    }

    /**
     * 格式化电话的时间信息
     */
    private function formatTimeString($time) {
        $year = substr($time, 0, 4);
        $month = substr($time, 4, 2);
        $day = substr($time, 6, 2);
        $hour = substr($time, 9, 2);
        $minute = substr($time, 11, 2);
        $second = substr($time, 13, 2);
        $date = $year . '-' . $month . '-' . $day . ' ' . $hour . ':' . $minute . ':' . $second;
        return strtotime($date);
    }

    /**
     * 获取用户分机号 分机号码=>user_id
     */
    private function getuserinfo() {
        $m = M('UserAccount');
        $data = $m->getField('user_id,telnum', true);
        $info = array();
        foreach ($data as $key => $value) {
            $arr = explode('-', $value);
            $info[$arr[2]] = $key;
        }
        return $info;
    }

    /**
     * 获取mp3文件的时间长度
     */
    private function mp3_len($file) {
        $m = new \Org\MP3TIMECLASS\mp3file($file);
        $a = $m->get_metadata();
        $len = $a['Length'] ? $a['Length'] : 0;
        return $len;
    }

    /**
     * 
     */
    public function getAllData() {
        
    }

    /**
     * 遍历全部数据
     */
    public function traverseAll() {
        
    }

}
